#!/usr/bin/env ruby
require 'optparse'

def red(s); colorize(s, "\e[0m\e[31m"); end
def green(s); colorize(s, "\e[0m\e[32m"); end
def dark_green(s); colorize(s, "\e[32m"); end
def yellow(s); colorize(s, "\e[0m\e[33m"); end
def blue(s); colorize(s, "\e[0m\e[34m"); end
def dark_blue(s); colorize(s, "\e[34m"); end
def pur(s); colorize(s, "\e[0m\e[35m"); end
def colorize(text, color_code)  "#{color_code}#{text}\e[0m" end

def log(msg)
  puts yellow "  #{msg}"
end

options = {}
OptionParser.new do |opts|
  #    -h,--help       Display this help
  #    -v,--version    Display version number
  #    -n,--name       Set the name of the application that sends the notification
  #                    [Default: growlnotify]
  #    -s,--sticky     Make the notification sticky
  #    -a,--appIcon    Specify an application name to take the icon from
  #    -i,--icon       Specify a file type or extension to look up for the
  #                    notification icon
  #    -I,--iconpath   Specify a file whose icon will be the notification icon
  #       --image      Specify an image file to be used for the notification icon

  opts.on('--image IMAGE', "Specify an image file to be used for the notification icon") do |img|
    options[:image] = true
    if !File.exists? img
      log "GROWL ERROR: Image file does not exist"
      exit 1
    end
  end

  #    -m,--message    Sets the message to be used instead of using stdin
  opts.on('-m', '--message MSG', "Specify an image file to be used for the notification icon") do |msg|
    options[:message] = true
    if !msg
      log "GROWL ERROR: No message"
      exit 1
    else
      log "growl: #{msg}"
    end
  end
    #                    Passing - as the argument means read from stdin
    #    -p,--priority   Specify an int or named key (default is 0)
    #    -d,--identifier Specify a notification identifier (used for coalescing)
    #    -H,--host       Specify a hostname to which to send a remote notification.
    #    -P,--password   Password used for remote notifications.
    #    -u,--udp        Use UDP instead of DO to send a remote notification.
    #       --port       Port number for UDP notifications.
    #    -A,--auth       Specify digest algorithm for UDP authentication.
    #                    Either MD5 [Default], SHA256 or NONE.
    #    -c,--crypt      Encrypt UDP notifications.
    #    -w,--wait       Wait until the notification has been dismissed.
    #       --progress   Set a progress value for this notification.

    #    -t,--title      Does nothing. Any text following will be treated as the
    #                    title because that's the default argument behaviour
    opts.on('-t', "Does nothing") do |msg|
      options[:title] = true
      if !msg
        log "GROWL ERROR: No title"
        exit 1
      end
      log "growl: #{msg}"
    end

    #puts "  Grrrr! #{ARGV.inspect}"
end.parse!

